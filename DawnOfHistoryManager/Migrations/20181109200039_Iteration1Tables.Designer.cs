// <auto-generated />
using System;
using DawnOfHistoryManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DawnOfHistoryManager.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20181109200039_Iteration1Tables")]
    partial class Iteration1Tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DawnOfHistoryManager.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvancementId");

                    b.Property<string>("RulesText");

                    b.HasKey("Id");

                    b.HasIndex("AdvancementId");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.ActiveCiv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AstPosition");

                    b.Property<int>("Cities");

                    b.Property<int>("CivId");

                    b.Property<int>("CurrentPhase");

                    b.Property<string>("GameName");

                    b.Property<int>("SpendLimit");

                    b.HasKey("Id");

                    b.HasIndex("CivId");

                    b.ToTable("ActiveCivs");
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.Advancement", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("BaseCost");

                    b.Property<int?>("CreditAdvancementId");

                    b.Property<int?>("CreditAdvancementValue");

                    b.Property<int>("CreditArt");

                    b.Property<int>("CreditCivic");

                    b.Property<int>("CreditCraft");

                    b.Property<int>("CreditReligion");

                    b.Property<int>("CreditScience");

                    b.Property<bool>("IsArt");

                    b.Property<bool>("IsCivic");

                    b.Property<bool>("IsCraft");

                    b.Property<bool>("IsReligion");

                    b.Property<bool>("IsScience");

                    b.Property<string>("Name");

                    b.Property<int>("Points");

                    b.HasKey("Id");

                    b.ToTable("Advancements");
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.Civ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AstEarlyBronze");

                    b.Property<int>("AstEarlyIron");

                    b.Property<int>("AstLateBronze");

                    b.Property<int>("AstLateIron");

                    b.Property<int>("AstStone");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Civs");
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.OwnedAdvancement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActiveCivId");

                    b.Property<int>("AdvancementId");

                    b.HasKey("Id");

                    b.HasIndex("ActiveCivId");

                    b.HasIndex("AdvancementId");

                    b.ToTable("OwnedAdvancements");
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.Ability", b =>
                {
                    b.HasOne("DawnOfHistoryManager.Models.Advancement", "Advancement")
                        .WithMany("Abilities")
                        .HasForeignKey("AdvancementId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.ActiveCiv", b =>
                {
                    b.HasOne("DawnOfHistoryManager.Models.Civ", "Civ")
                        .WithMany("ActiveCivs")
                        .HasForeignKey("CivId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.Advancement", b =>
                {
                    b.HasOne("DawnOfHistoryManager.Models.Advancement", "CreditAdvancement")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DawnOfHistoryManager.Models.OwnedAdvancement", b =>
                {
                    b.HasOne("DawnOfHistoryManager.Models.ActiveCiv", "ActiveCiv")
                        .WithMany("OwnedAdvancements")
                        .HasForeignKey("ActiveCivId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DawnOfHistoryManager.Models.Advancement", "Advancement")
                        .WithMany("OwnedAdvancements")
                        .HasForeignKey("AdvancementId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
